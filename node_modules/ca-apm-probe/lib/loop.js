 
/**
 * Copyright (c) 2015 CA. All rights reserved.
 *
 * This software and all information contained therein is confidential and proprietary and
 * shall not be duplicated, used, disclosed or disseminated in any way except as authorized
 * by the applicable license agreement, without the express written permission of CA. All
 * authorized reproductions must be marked with this language.
 *
 * EXCEPT AS SET FORTH IN THE APPLICABLE LICENSE AGREEMENT, TO THE EXTENT
 * PERMITTED BY APPLICABLE LAW, CA PROVIDES THIS SOFTWARE WITHOUT WARRANTY
 * OF ANY KIND, INCLUDING WITHOUT LIMITATION, ANY IMPLIED WARRANTIES OF
 * MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT WILL CA BE
 * LIABLE TO THE END USER OR ANY THIRD PARTY FOR ANY LOSS OR DAMAGE, DIRECT OR
 * INDIRECT, FROM THE USE OF THIS SOFTWARE, INCLUDING WITHOUT LIMITATION, LOST
 * PROFITS, BUSINESS INTERRUPTION, GOODWILL, OR LOST DATA, EVEN IF CA IS
 * EXPRESSLY ADVISED OF SUCH LOSS OR DAMAGE.
 */
var eventLoopStats = require('event-loop-stats');
var agent;

exports.init = function(agent_) {
  agent = agent_;
};

exports.poll = function() {
  var statistics = eventLoopStats.sense();

  // we're also going to shoehorn it into the metric data to make our life
  // easier
  //agent.metric(null, 'queue', [max, num ? sum / num : 0]);

  if (statistics.num === 0) {
    return null;
  }

  // XXX(bnoordhuis) Backwards compatible field names.
  // XXX(bnoordhuis) fastest_ms is new though.
  return {count: statistics.num, fastest_ms: statistics.min, slowest_ms: statistics.max, sum_ms: (statistics.sum * statistics.num)};
};
